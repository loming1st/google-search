name: Release extension

on:
  push:
    branches:
      - main
    paths:
      - package.json

  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: read

    env:
      EXT_VERSION: "" # will be set in the workflow

    outputs:
      version: ${{ env.EXT_VERSION }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 16.x
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - name: Parse version from package.json
        run: |
          echo "EXT_VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV

      - run: npm ci
          
      - run: npm run package

      - uses: actions/upload-artifact@v4
        with:
          name: google-search-${{ env.EXT_VERSION }}.vsix
          path: ./google-search-${{ env.EXT_VERSION }}.vsix
      
      - name: Create release and upload release asset
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");

            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "release-v${{ env.EXT_VERSION }}",
              name: "v${{ env.EXT_VERSION }}",
              draft: false,
              prerelease: false
            });

            const path = "./google-search-${{ env.EXT_VERSION }}.vsix";
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              data: fs.readFileSync(path),
              name: "google-search-${{ env.EXT_VERSION }}.vsix",
              headers: {
                "content-type": "application/vsix",
                "content-length": fs.statSync(path).size
              }
            });

            core.summary.addLink(`Release v${{ env.EXT_VERSION }}`, release.data.html_url);
            await core.summary.write();